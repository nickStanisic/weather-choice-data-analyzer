version: '3.8'

services:
  postgres_normal:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432" 
    volumes:
      - postgres_normal_data:/var/lib/postgresql/data
      - ./init_normal.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  postgres_test:
    image: postgres:13
    container_name: postgres_test
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: testdb
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./init_test.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  test:
    build:
      context: ..
      dockerfile: docker/Dockerfile.test
    container_name: flask_test
    environment:
      - FLASK_CONFIG=TestConfig
      - POSTGRES_NAME=testdb
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=5432
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_normal_data:
  postgres_test_data: